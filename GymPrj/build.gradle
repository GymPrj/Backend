plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'GymInfoService'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.4'
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'
	implementation group: 'com.querydsl', name: 'querydsl-core', version: '5.0.0'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'com.h2database:h2:1.4.200'
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'com.jayway.jsonpath:json-path:2.6.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

test {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

project.afterEvaluate {
	project.tasks.compileQuerydsl.options.compilerArgs = [
			"-proc:only",
			"-processor", project.querydsl.processors() +
					',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
	]
}

compileQuerydsl.doFirst {
	if (file(querydslDir).exists())
		delete(file(querydslDir))
}
